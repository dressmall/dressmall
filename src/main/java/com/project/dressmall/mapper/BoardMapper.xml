<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.dressmall.mapper.BoardMapper">
	<!-- goodsOne에 출력할 boardList -->
	<select id="selectBoardList" parameterType="map" resultType="map">
		SELECT
		    c.customer_mail customerMail
		    , a.address_no addressNo
		    , p.payment_no paymentNo
		    , o.orders_no ordersNo
		    , o.goods_no goodsNo
		    , b.board_content boardContent
		FROM customer c
		LEFT OUTER JOIN address a ON c.customer_mail = a.customer_mail
		LEFT OUTER JOIN payment p ON p.address_no = a.address_no
		LEFT OUTER JOIN orders o ON o.payment_no = p.payment_no 
		LEFT OUTER JOIN board b ON o.orders_no = b.orders_no
		LEFT OUTER JOIN goods g ON o.goods_no = g.goods_no
		WHERE g.goods_no = #{goodsNo}
	</select>

	<!-- 이미 리뷰등록이 되어있는 ordersNo에는 button 삭제 -->
	<select id="selectBoardByOrders" parameterType="Integer">
		SELECT EXISTS (
	        SELECT b.orders_no
	        FROM board b
	        WHERE orders_no = #{ordersNo}
	    )
	</select>
	<!-- 후기 삭제 (박시현) -->
	<delete id="deleteBoard" parameterType="Integer">
		DELETE FROM board 
		WHERE orders_no = #{ordersNo}
	</delete>
	<!-- 후기 추가 폼에 쓸 goods/orders정보 (박시현) -->
	<select id="addBoardByOrdersList" parameterType="map" resultType="map">
		SELECT
		     o.orders_no ordersNo
		    , o.goods_no goodsNo
		    , o.orders_amount ordersAmount
		    , g.goods_title goodsTitle
		    , g.goods_memo goodsMemo
		    , g.goods_state goodsState
		    , g.goods_price goodsPrice
		    , gf.goods_file_name goodsFileName
		FROM orders o
		LEFT OUTER JOIN goods g ON o.goods_no = g.goods_no
		LEFT OUTER JOIN goods_file gf ON g.goods_no = gf.goods_no
		WHERE o.orders_no = #{ordersNo}
	</select>
	<!-- 후기 추가 (박시현) -->
	<insert id="insertBoard" parameterType="com.project.dressmall.vo.Board">
	    INSERT INTO board (
		    orders_no
		    , board_content
	    )
	    VALUES (
		    #{ordersNo}
		    , #{boardContent}
	    )
	</insert>
</mapper>