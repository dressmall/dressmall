<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.dressmall.mapper.PaymentMapper">

<!-- /on/customer/removeOrders : 고객페이지에서 주문취소하면 payment 테이블의 취소하기 전 가격을 조회 (진수우) -->
<select id="selectPaymentOne" parameterType="Integer" resultType="Integer">
	SELECT payment_price FROM payment WHERE payment_no = #{paymentNo};
</select>

<!-- /on/customer/removeOrders : 고객페이지에서 주문취소하면 payment 테이블의 결제정보를 수정 (진수우) -->
<update id="updatePaymentByOrders" parameterType="map">
	UPDATE payment SET payment_price = #{paymentPrice}
	WHERE payment_no = #{paymentNo};
</update>

<!-- /on/customer/removeOrders : 고객페이지에서 품목종류가 1개인 제품 삭제 시 결제정보 삭제 (진수우) -->
<delete id="deletePayment" parameterType="Integer">
	DELETE FROM payment WHERE payment_no = #{paymentNo};
</delete>

<!-- /on/customer/ordersList : 고객페이지에서 결제내역 페이지 결제내역 출력 (진수우) -->
<select id="selectPaymentListCustomer" parameterType="String" resultType="com.project.dressmall.vo.Payment">
	SELECT 
		p.payment_no paymentNo
		, p.payment_price paymentPrice
		, p.payment_method paymentMethod
		, p.payment_state paymentState
	FROM payment p
	LEFT OUTER JOIN address a ON p.address_no = a.address_no
	WHERE a.customer_mail = #{customerMail}
	ORDER BY paymentNo DESC;
</select>

<!-- /on/customer/paymentComplete : 결제페이지에서 결제처리 (진수우) -->
<insert id="insertPayment" parameterType="com.project.dressmall.vo.Payment" useGeneratedKeys="true" keyProperty="paymentNo">
	INSERT INTO payment(
		address_no
		, payment_price
		, payment_method
	) VALUES (
		#{addressNo}
		, #{paymentPrice}
		, #{paymentMethod}
	);
</insert>

<!-- /on/staff/paymentList : 관리자페이지에서 결제리스트 출력 (진수우) -->
<select id="selectPaymentList" parameterType="map" resultType="map">
	SELECT 
		p.payment_no paymentNo
		, a.customer_mail customerMail
		, a.address_detail addressDetail
		, p.payment_price paymentPrice
		, p.payment_method paymentMethod
		, p.payment_state paymentState
	FROM payment p LEFT OUTER JOIN address a
	ON p.address_no = a.address_no
	ORDER BY paymentNo DESC
	LIMIT #{beginRow}, #{rowPerPage};
</select>

<!-- /on/staff/paymentList : 관리자페이지에서 결제리스트 카운트 (진수우) -->
<select id="countPaymentList" resultType="Integer">
	SELECT COUNT(*)
	FROM payment;
</select>

<!-- /on/staff/paymentUpdate : 관리자페이지에서 배송중으로 업데이트 (진수우) -->
<update id="updatePayment" parameterType="Integer">
	UPDATE payment SET payment_state = '배송중' WHERE payment_no = #{paymentNo};
</update>

</mapper>